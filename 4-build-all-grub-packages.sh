#!/bin/bash
#
##################################################################################################################
# Written to be used on 64 bits computers
# Author 	: 	Erik Dubois
# Website 	: 	http://www.erikdubois.be
##################################################################################################################
##################################################################################################################
#
#   DO NOT JUST RUN THIS. EXAMINE AND JUDGE. RUN AT YOUR OWN RISK.
#
##################################################################################################################

echo "#############################################################################################"
echo
echo "This builds all the existing packages"
echo "Scans the existing folders"
echo "Be sure you have the highest number for all of them"
echo
echo "#############################################################################################"
echo "Give the pkgversion number like 23.01"
echo "#############################################################################################"

read pkgver

echo "#############################################################################################"
echo "You typed " $pkgver
echo "#############################################################################################"
echo
echo "#############################################################################################"
echo "Give the pkgrelease number like 01"
echo "#############################################################################################"

read pkgrel

echo "#############################################################################################"
echo "You typed " $pkgrel
echo "#############################################################################################"
echo
echo "#############################################################################################"
echo "Continue ?  (y/Y)"
echo "#############################################################################################"
read response

if [[ "$response" == [yY] ]]; then

		count=0

		for name in $(ls -d edu-asus*grub*/); do
			count=$[count+1]
			cd $name
			tput setaf 1;echo $name;echo "Github "$count;tput sgr0;
			sed -i "s/\(^pkgver=\).*/\1$pkgver/" PKGBUILD
			sed -i "s/\(^pkgrel=\).*/\1$pkgrel/" PKGBUILD
			echo "#############################################################################################"
			echo "################  "$(basename `pwd`)" done"
			echo "#############################################################################################"
			cd ..
		done

		for name in $(ls -d edu-bao*grub*/); do
			count=$[count+1]
			cd $name
			tput setaf 1;echo $name;echo "Github "$count;tput sgr0;
			sed -i "s/\(^pkgver=\).*/\1$pkgver/" PKGBUILD
			sed -i "s/\(^pkgrel=\).*/\1$pkgrel/" PKGBUILD
			echo "#############################################################################################"
			echo "################  "$(basename `pwd`)" done"
			echo "#############################################################################################"
			cd ..
		done

		for name in $(ls -d edu-radar*grub*/); do
			count=$[count+1]
			cd $name
			tput setaf 1;echo $name;echo "Github "$count;tput sgr0;
			sed -i "s/\(^pkgver=\).*/\1$pkgver/" PKGBUILD
			sed -i "s/\(^pkgrel=\).*/\1$pkgrel/" PKGBUILD
			echo "#############################################################################################"
			echo "################  "$(basename `pwd`)" done"
			echo "#############################################################################################"
			cd ..
		done

		for name in $(ls -d edu-ubuntu*grub*/); do
			count=$[count+1]
			cd $name
			tput setaf 1;echo $name;echo "Github "$count;tput sgr0;
			sed -i "s/\(^pkgver=\).*/\1$pkgver/" PKGBUILD
			sed -i "s/\(^pkgrel=\).*/\1$pkgrel/" PKGBUILD
			echo "#############################################################################################"
			echo "################  "$(basename `pwd`)" done"
			echo "#############################################################################################"
			cd ..
		done

		for name in $(ls -d edu-vimix*grub*/); do
			count=$[count+1]
			cd $name
			tput setaf 1;echo $name;echo "Github "$count;tput sgr0;
			sed -i "s/\(^pkgver=\).*/\1$pkgver/" PKGBUILD
			sed -i "s/\(^pkgrel=\).*/\1$pkgrel/" PKGBUILD
			echo "#############################################################################################"
			echo "################  "$(basename `pwd`)" done"
			echo "#############################################################################################"
			cd ..
		done

else
	echo "#############################################################################################"
  echo "Nothing has been changed."
fi

count=0

for name in $(ls -d edu-asus*grub*/); do
		count=$[count+1]
		echo
		echo "Build " $name " - nr: " $count
		echo
		cd $name
		./build*
		echo "#############################################################################################"
		echo "################  "$(basename `pwd`)" done"
		echo "#############################################################################################"
		cd ..
done

for name in $(ls -d edu-bao*grub*/); do
		count=$[count+1]
		echo
		echo "Build " $name " - nr: " $count
		echo
		cd $name
		./build*
		echo "#############################################################################################"
		echo "################  "$(basename `pwd`)" done"
		echo "#############################################################################################"
		cd ..
done

for name in $(ls -d edu-radar*grub*/); do
		count=$[count+1]
		echo
		echo "Build " $name " - nr: " $count
		echo
		cd $name
		./build*
		echo "#############################################################################################"
		echo "################  "$(basename `pwd`)" done"
		echo "#############################################################################################"
		cd ..
done

for name in $(ls -d edu-ubuntu*grub*/); do
		count=$[count+1]
		echo
		echo "Build " $name " - nr: " $count
		echo
		cd $name
		./build*
		echo "#############################################################################################"
		echo "################  "$(basename `pwd`)" done"
		echo "#############################################################################################"
		cd ..
done

for name in $(ls -d edu-vimix*grub*/); do
		count=$[count+1]
		echo
		echo "Build " $name " - nr: " $count
		echo
		cd $name
		./build*
		echo "#############################################################################################"
		echo "################  "$(basename `pwd`)" done"
		echo "#############################################################################################"
		cd ..
done

echo "#############################################################################################"
echo "###################                 Script finished                      ####################"
echo "#############################################################################################"
